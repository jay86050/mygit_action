name: Commit Discussion on GitHub 

on:
  push:
    branches:
      - main # Triggers when a commit is pushed to the 'main' branch.

jobs:
  create-discussion:
    name: Create GitHub Discussion
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
    
      - name: Get Commit Details
        run: |
          echo "Fetching commit details..."
          COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
          COMMIT_HASH=$(git log -1 --pretty=format:"%H")
          AUTHOR_NAME=$(git log -1 --pretty=format:"%an")
          AUTHOR_GITHUB=$(git log -1 --pretty=format:"%ae")
    
          echo "Commit Message: $COMMIT_MESSAGE"
          echo "Commit Hash: $COMMIT_HASH"
          echo "Author: $AUTHOR_NAME <$AUTHOR_GITHUB>"
    
          echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV
          echo "AUTHOR_NAME=$AUTHOR_NAME" >> $GITHUB_ENV
          echo "AUTHOR_GITHUB=$AUTHOR_GITHUB" >> $GITHUB_ENV
         
      - name: Get Repository ID
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          echo "Fetching repository ID..."
          
          REPO_ID=$(curl -s -X POST -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github.v4+json" \
            -H "Content-Type: application/json" \
            --data '{"query": "query { repository(owner: \"'$REPO_OWNER'\", name: \"'$REPO_NAME'\") { id } }"}' \
            https://api.github.com/graphql | jq -r '.data.repository.id')

          if [ -z "$REPO_ID" ] || [ "$REPO_ID" == "null" ]; then
            echo "Error: Could not retrieve repository ID."
            exit 1
          fi

          echo "Repository ID: $REPO_ID"
          echo "REPO_ID=$REPO_ID" >> $GITHUB_ENV

      - name: Get Category ID for General Category
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching category ID for 'General'..."
          
          CATEGORY_ID=$(curl -s -X POST -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github.v4+json" \
            -H "Content-Type: application/json" \
            --data '{"query": "query { repository(owner: \"'${{ github.repository_owner }}'\", name: \"'${{ github.event.repository.name }}'\") { discussions(first: 1) { edges { node { category { id name } } } } } }"}' \
            https://api.github.com/graphql | jq -r '.data.repository.discussions.edges[0].node.category.id')

          if [ -z "$CATEGORY_ID" ] || [ "$CATEGORY_ID" == "null" ]; then
            echo "Error: Could not retrieve category ID for 'General'."
            exit 1
          fi

          echo "Category ID: $CATEGORY_ID"
          echo "CATEGORY_ID=$CATEGORY_ID" >> $GITHUB_ENV

      - name: Capture Logs from GitHub Actions
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching logs from GitHub Actions..."
          REPO=${{ github.repository }}
          RUN_ID=${{ github.run_id }}

          echo "Run ID: $RUN_ID"

          # Fetch Logs URL
          LOGS_URL="https://api.github.com/repos/$REPO/actions/runs/$RUN_ID/logs"

          # Wait for logs to be available
          sleep 10 

          # Fetch logs using API
          RESPONSE=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "$LOGS_URL")

          # Check if response contains logs or an error
          if echo "$RESPONSE" | jq -e 'has("message")'; then
            echo "Error fetching logs: $(echo "$RESPONSE" | jq -r '.message')"
            exit 1
          fi

          # Decode logs (if available)
          echo "$RESPONSE" | base64 -w 0 > logs_base64.txt
          LOGS=$(base64 -d logs_base64.txt | tail -n 50)

          # Store logs in GitHub environment
          echo "LOGS=$LOGS" >> $GITHUB_ENV

      - name: Create Discussion in GitHub
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_ID: ${{ env.REPO_ID }}
          CATEGORY_ID: ${{ env.CATEGORY_ID }}
        run: |
          echo "Creating discussion in GitHub..."
          
          GRAPHQL_QUERY=$(jq -n \
            --arg repoId "$REPO_ID" \
            --arg categoryId "$CATEGORY_ID" \
            --arg title "New Commit: $COMMIT_MESSAGE" \
            --arg body "*Commit Details:*\n\n- **Commit Hash:** $COMMIT_HASH\n- **Author:** $AUTHOR_NAME (<$AUTHOR_GITHUB>)\n- **Commit Message:** $COMMIT_MESSAGE\n\n*Commit Logs (last 50 lines):*\n\n\`\`\`\n$LOGS\n\`\`\`" \
            '{ "query": "mutation createDiscussion($repoId: ID!, $categoryId: ID!, $title: String!, $body: String!) { createDiscussion(input: {repositoryId: $repoId, categoryId: $categoryId, title: $title, body: $body}) { discussion { id } } }", "variables": { "repoId": $repoId, "categoryId": $categoryId, "title": $title, "body": $body } }')

          echo "GraphQL Query: $GRAPHQL_QUERY"

          curl -X POST \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github.v4+json" \
            -H "Content-Type: application/json" \
            -d "$GRAPHQL_QUERY" \
            https://api.github.com/graphql
